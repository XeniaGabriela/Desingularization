
> ideal i=x3-yz3,y4+x2w2;
> isnor(i);
0
> ideal s=std(slocus(i));
> s;
s[1]=yz3-x3
s[2]=y4+x2w2
s[3]=x4w
s[4]=xz3w2+6x2y3
s[5]=xyz2w2
s[6]=x2z2w2
s[7]=x2z3w
s[8]=x2yz2w
s[9]=x3y3
s[10]=x6y2
s[11]=x9y
s[12]=x12
> dim(s);
2
> i=std(i);
> dim(i);
2
> ideal irad=std(radical(i));
> reduce(irad, i);
_[1]=0
_[2]=0
_[3]=xz3w2+x2y3
> i=irad;
> i;
i[1]=yz3-x3
i[2]=y4+x2w2
i[3]=xz3w2+x2y3
> ideal s=std(slocus(i));
// ** redefining s **
> dim(s);
1
> list n=normal(i);
> n;
[1]:
   [1]:
      //   characteristic : 0
//   number of vars : 21
//        block   1 : ordering dp
//                  : names    T(1) T(2) T(3) T(4) T(5) T(6) T(7) T(8) T(9) T(10) T(11) T(12) T(13) T(14) T(15) T(16) T(17)
//        block   2 : ordering dp
//                  : names    x y z w
//        block   3 : ordering C
   [2]:
      //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    x y z w
//        block   2 : ordering C
[2]:
   [1]:
      _[1]=x3y2
      _[2]=-x4w
      _[3]=xy3z2
      _[4]=x2y3z
      _[5]=-x2yz2w
      _[6]=-x3yzw
      _[7]=x2y2z2w
      _[8]=-x4z3w
      _[9]=-x6y
      _[10]=-x4z6w
      _[11]=-x9
      _[12]=-x9z3
      _[13]=x4z9w
      _[14]=-x9z6
      _[15]=x4z12w
      _[16]=x4z15w
      _[17]=x4z18w
      _[18]=x4w
   [2]:
      _[1]=1
> def Newrk=n[1][1];
> setring Newrk;
> norid;
norid[1]=T(2)+1
...
norid[230]=z^3*w^2+x*y^3
> norid=std(norid);
> norid;
norid[1]=y*z^3-x^3
...
norid[110]=T(1)^2+1
> int homo=homog(norid);
> homo;
0
> intvec rw;
> list L=substpart(norid,normap,homo,rw);
> L;
[1]:
   //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    T(1) T(2) T(3) T(4)
//        block   2 : ordering C
> def newrk=L[1];
> setring newrk;
> endid=std(endid);
> endid;
endid[1]=T(1)^2+1
endid[2]=T(2)^5+T(1)*T(3)*T(4)
> ideal s = std(radical(slocus(endid)));
// ** redefining s **
> s;
s[1]=T(4)
s[2]=T(3)
s[3]=T(2)
s[4]=T(1)^2+1
> size(reduce(1,s));
1
> reduce(1,s);
1
> list b=blowUp2(endid,s);
> b;
[1]:
   //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    x(1) x(4) y(2) y(3)
//        block   2 : ordering C
[2]:
   //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    x(1) x(3) y(1) y(3)
//        block   2 : ordering C
[3]:
   //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    x(1) x(2) y(1) y(2)
//        block   2 : ordering C
> def R1=b[1];
> setring R1;
> eD;
eD[1]=y(2)
eD[2]=x(4)
eD[3]=x(1)^2+1
> Jnew;
Jnew[1]=x(1)^2+1
Jnew[2]=x(4)^3*y(3)^5+x(1)*y(2)
> ideal s=std(slocus(Jnew,radical(eD)));
> size(reduce(1,s));
0
> setring r;
> list n=normalC(i);                             //--- Zum Vergleich normalC(i)
> n;
[1]:
   [1]:
      //   characteristic : 0
//   number of vars : 2
//        block   1 : ordering dp
//                  : names    T(1) T(2)
//        block   2 : ordering C
   [2]:
      //   characteristic : 0
//   number of vars : 4
//        block   1 : ordering dp
//                  : names    T(1) T(2) T(3) T(4)
//        block   2 : ordering C
[2]:
   [1]:
      0,-1
   [2]:
      -1
> def r1=n[1][2];
> setring r1;
> norid;
norid[1]=T(4)^2+1
norid[2]=T(3)^5+T(1)*T(2)*T(4)
                                           //---endid[1]=T(1)^2+1
                                                endid[2]=T(2)^5+T(1)*T(3)*T(4) ist analog
> normap;
normap[1]=T(2)*T(3)*T(4)^2
normap[2]=T(3)^3*T(4)
normap[3]=-T(2)*T(4)
normap[4]=T(1)
> 
